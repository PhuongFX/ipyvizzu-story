name: Documentation

on:
  workflow_dispatch:
  release:
    types: [published]
  workflow_call:

jobs:
  create_doc:
    if: ${{ !((github.event_name == 'release' && github.event.action == 'published') || github.event_name == 'workflow_dispatch') }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Cache dev-py environment
        uses: actions/cache@v3
        with:
          path: .venv_ipyvizzu_story
          key: dev-py-${{ hashFiles('dev-requirements.txt') }}

      - name: Init dev-py environment
        run: |
          make check-dev-py
          make dev-py
          make install

      - name: Cache coverage
        uses: actions/cache@v3
        with:
          path: ./tests/coverage
          key: coverage-${{ github.run_id }}

      - name: Build documentation
        run: make doc

  publish_doc:
    if: ${{ ((github.event_name == 'release' && github.event.action == 'published') || github.event_name == 'workflow_dispatch') }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Cache dev-py environment
        uses: actions/cache@v3
        with:
          path: .venv_ipyvizzu_story
          key: dev-py-${{ hashFiles('dev-requirements.txt') }}

      - name: Init dev-py environment
        run: |
          make check-dev-py
          make dev-py
          make install

      - name: Get workflow ID
        id: workflow_id
        run: |
          workflow_data=$(curl -s -X GET \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/actions/workflows")
          workflow_id=$(echo $workflow_data | jq -r '.workflows[] | select(.name == "CI-CD") | .id')
          echo "workflow_id=${workflow_id}" >> $GITHUB_OUTPUT

      - name: Get run ID
        id: run_id
        run: |
          run_data=$(curl -s -X GET \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/actions/workflows/${{ steps.workflow_id.outputs.workflow_id }}/runs?branch=main")
          run_id=$(echo $run_data | jq -r '.workflow_runs[0].id')
          echo "run_id=${run_id}" >> $GITHUB_OUTPUT

      - name: Cache coverage
        uses: actions/cache@v3
        with:
          path: ./tests/coverage
          key: coverage-${{ steps.run_id.outputs.run_id }}

      - name: Configure Git
        run: |
          git config --global user.name "${{ env.GIT_USER_NAME }}"
          git config --global user.email "${{ env.GIT_USER_EMAIL }}"
        env:
          GIT_USER_NAME: David Vegh
          GIT_USER_EMAIL: david.andras.vegh+github@gmail.com

      - name: Deploy documentation
        run: |
          git fetch origin gh-pages || echo "gh-pages does not exist"
          make deploy
          git push origin gh-pages
